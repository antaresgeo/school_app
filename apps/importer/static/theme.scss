.dark {
    --primary: 174, 234, 191;
    --primary-gradient: 133, 224, 159;
    --on-primary: 10, 41, 19;
    --primary-container: 42, 162, 76;
    --on-primary-container: 255, 255, 255;
    --primary-fixed: 214, 245, 223;
    --primary-fixed-dim: 174, 234, 191;
    --inverse-primary: 174, 234, 191;
    --error: 255, 153, 153;
    --error-gradient: 255, 102, 102;
    --on-error: 51, 0, 0;
    --error-container: 204, 0, 0;
    --on-error-container: 255, 255, 255;
    --warning: 255, 255, 153;
    --warning-gradient: 255, 255, 102;
    --on-warning: 51, 51, 0;
    --warning-container: 204, 204, 0;
    --on-warning-container: 255, 255, 255;
    --info: 153, 153, 255;
    --info-gradient: 102, 102, 255;
    --on-info: 0, 0, 51;
    --info-container: 0, 0, 204;
    --on-info-container: 255, 255, 255;
    --success: 153, 255, 153;
    --success-gradient: 102, 255, 102;
    --on-success: 0, 51, 0;
    --success-container: 0, 204, 0;
    --on-success-container: 255, 255, 255;
    --surface-dim: 15, 15, 15;
    --surface: 15, 15, 15;
    --surface-bright: 61, 61, 61;
    --surface-container-lowest: 10, 10, 10;
    --surface-container-low: 26, 26, 26;
    --surface-container: 31, 31, 31;
    --surface-container-high: 43, 43, 43;
    --surface-container-highest: 56, 56, 56;
    --on-surface: 230, 230, 230;
    --inverse-surface: 242, 242, 242;
    --on-inverse-surface: 51, 51, 51;
    --on-surface-variant: 204, 202, 206;
    --outline: 128, 122, 133;
    --outline-variant: 204, 202, 206;
}

.light {
    --primary: 42, 162, 76;
    --primary-gradient: 52, 203, 95;
    --on-primary: 255, 255, 255;
    --primary-container: 214, 245, 223;
    --on-primary-container: 10, 41, 19;
    --primary-fixed: 214, 245, 223;
    --primary-fixed-dim: 174, 234, 191;
    --inverse-primary: 174, 234, 191;
    --error: 204, 0, 0;
    --error-gradient: 255, 0, 0;
    --on-error: 255, 255, 255;
    --error-container: 255, 204, 204;
    --on-error-container: 51, 0, 0;
    --warning: 204, 204, 0;
    --warning-gradient: 255, 255, 0;
    --on-warning: 255, 255, 255;
    --warning-container: 255, 255, 204;
    --on-warning-container: 51, 51, 0;
    --info: 0, 0, 204;
    --info-gradient: 0, 0, 255;
    --on-info: 255, 255, 255;
    --info-container: 204, 204, 255;
    --on-info-container: 0, 0, 51;
    --success: 0, 204, 0;
    --success-gradient: 0, 255, 0;
    --on-success: 255, 255, 255;
    --success-container: 204, 255, 204;
    --on-success-container: 0, 51, 0;
    --surface-dim: 222, 222, 222;
    --surface: 250, 250, 250;
    --surface-bright: 250, 250, 250;
    --surface-container-lowest: 255, 255, 255;
    --surface-container-low: 245, 245, 245;
    --surface-container: 240, 240, 240;
    --surface-container-high: 235, 235, 235;
    --surface-container-highest: 230, 230, 230;
    --on-surface: 26, 26, 26;
    --inverse-surface: 51, 51, 51;
    --on-inverse-surface: 242, 242, 242;
    --on-surface-variant: 77, 73, 80;
    --outline: 128, 122, 133;
    --outline-variant: 204, 202, 206;
}

a:not(.btn) {
    color: rgb(var(--primary));
}

.w100 {
    width: 100%;
}

.h100 {
    height: 100%;
}

.container {
    display: flex;
    gap: 1rem;

    &.row {
        flex-direction: row;
    }

    &.col {
        flex-direction: column;
    }

    &.center {
        justify-content: center;
        align-items: center;
    }

    &.start {
        align-items: self-start;
    }

}

.box {
    padding: 1rem;
    border-radius: var(--app-border-radius);
    @extend %box;
}

.btn,
input[type=button],
button {
    display: inline-block;
    padding: 0.75rem 1.7rem;
    text-decoration: none;
    cursor: pointer;
    border-radius: var(--app-border-radius);
    --app-border-width: 0;
    --outline: transparent;
    border: var(--app-border-width) solid var(--outline);
    font-weight: 700;
    transition: all 0.3s cubic-bezier(.25, .8, .25, 1);
    --app-bg: rgb(var(--surface-container-low));
    --app-text: rgb(var(--primary));
    --app-elevation: var(--elevation-1);
    @extend %box;

    &.small {
        padding: 0.3rem 0.5rem;
    }

    &[disabled] {
        --app-bg: rgba(var(--on-surface), 0.12);
        --app-text: rgba(var(--on-surface), 0.38);
        --app-elevation: var(--elevation-0);

        &:hover,
        &:active,
        &:focus {
            --app-bg: rgba(var(--on-surface), 0.12);
            --app-text: rgba(var(--on-surface), 0.38);
        }
    }

    &:hover {
        --app-bg: rgba(var(--primary), 0.08);
        --app-text: rgb(var(--primary));
        --app-elevation: var(--elevation-2);
    }

    &:active,
    &:focus {
        --app-bg: rgba(var(--primary), 0.12);
        --app-text: rgb(var(--primary));
        --app-elevation: var(--elevation-1);
    }

    >span {
        margin-right: 8px;
        font-weight: 700;

        >.material-symbols-outlined {
            vertical-align: bottom;
        }
    }
}

input,
textarea {
    background: rgb(var(--surface-container-highest));
    ;
    color: rgb(var(--app-text));
    padding: 0.5rem;
    margin-top: 8px;
    display: block;
    width: 100%;
    border-radius: var(--app-border-radius);
    border: var(--app-border-width) solid rgb(var(--outline));

    &[disabled] {
        background: rgba(black, 0.08);
    }

    &:focus {
        border-color: rgb(var(--primary));
    }

    &:invalid {
        border-color: var(--error);
    }

    &:focus,
    &:valid,
    &:not(:placeholder-shown) {
        outline: none;

        ~label {
            top: -1px;
            left: 1em;
            padding: 0 4px;
            font-size: 0.85em !important;
            font-weight: 700;
            background: var(--app-bg);
        }
    }
}

.errorlist {
    list-style: none;
    padding: 0;
    margin: 0;

    li {
        --app-bg: rgb(var(--error));
        --app-text: rgb(var(--on-error));
        padding: 0.5rem;
        border-radius: var(--app-border-radius);
        @extend %box;
    }
}

header {
    --app-bg: rgb(var(--primary));
    --app-text: rgb(var(--on-primary));
    padding: 0.5rem 1rem;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    gap: 1rem;
    @extend %box
}

main,
.main {
    padding: 1rem;
}

.list,
.menu {
    --app-text: rgb(var(--on-surface));
    margin: 0;
    padding: 8px 0;
    list-style: none;
    display: inline-block;

    @extend %box;

    >.item {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: var(--app-space-gap);
        cursor: pointer;
        text-decoration: none;
        line-height: 20px;
        font-size: 14px;
        transition: background 300ms;

        &:hover:not(.divider) {
            background: rgba(var(--on-surface), .08);
        }

        &.divider {
            min-height: inherit;
            padding: calc(var(--app-space-gap) / 2) 0;
            gap: 0;
            font-size: 12px;
        }

        > {
            .content {
                flex: auto;
            }

            .vn {
                color: rgb(var(--on-surface-variant));
            }
        }
    }
}

.list {
    --app-bg: rgb(var(--surface));

    //--app-elevation: var(--elevation-1);
    .item {
        min-height: 56px;
        padding: 8px 24px 8px 16px;

        &:has(.content > .sup) {
            min-height: 72px;
            align-items: flex-start;
        }

        .sup {
            color: rgb(var(--on-surface-variant));
            font-size: 12px;
            padding-top: 4px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            line-height: 14px;
        }
    }
}

.menu {
    --app-bg: rgb(var(--surface-container));
    --app-elevation: var(--elevation-2);
    min-width: 112px;
    max-width: 280px;
    border-radius: var(--app-border-radius);

    >.item {
        min-height: 48px;
        padding: 0 12px;
    }

    >.content {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
}

.table {
    width: 100%;
    border-spacing: 0;
    border: 1px solid rgb(var(--outline));
    border-radius: var(--app-border-radius);
    //border-left-color: transparent;

    thead {
        --app-bg: rgb(var(--inverse-surface));
        --app-text: rgb(var(--on-inverse-surface));
        @extend %box;
        border-top-left-radius: var(--app-border-radius);
        border-top-right-radius: var(--app-border-radius);

        tr:first-child {
            th:first-child {
                border-top-left-radius: var(--app-border-radius);
            }

            th:last-child {
                border-top-right-radius: var(--app-border-radius);
            }
        }
    }

    tbody {
        border-bottom-left-radius: var(--app-border-radius);
        border-bottom-right-radius: var(--app-border-radius);

        tr:first-child {
            th:first-child {
                border-bottom-left-radius: var(--app-border-radius);
            }

            th:last-child {
                border-bottom-right-radius: var(--app-border-radius);
            }
        }
    }

    th {
        border-top: none !important;
    }


    th,
    td {
        padding: .5rem;
        text-align: center;
        border: 1px solid rgb(var(--outline));
        margin-right: -1px;
        margin-bottom: -1px;
        border-bottom: none;
        border-right: none;

        &:first-child {
            border-left-color: transparent;
        }
    }
}

.logo {
    color: rgb(var(--on-primary)) !important;
    text-decoration: none;
    font-size: 30px;
    font-weight: 500;
}

%box {
    background-color: var(--app-bg);
    color: var(--app-text)
}

@mixin gen-box-classes ($name) {
    @at-root .#{$name} {
        --app-bg : rgb(var(--#{$name})) !important;
        --app-text: rgb(var(--on-#{$name})) !important;
    }

    @at-root .on-#{$name} {
        --app-bg : rgb(var(--on-#{$name})) !important;
        --app-text: rgb(var(--#{$name})) !important;
    }

    @at-root .#{$name}-container {
        --app-bg : rgb(var(--#{$name}-container)) !important;
        --app-text: rgb(var(--on-#{$name}-container)) !important;
    }

    @at-root .on-#{$name}-container {
        --app-bg : rgb(var(--on-#{$name}-container)) !important;
        --app-text: rgb(var(--#{$name}-container)) !important;
    }

    @at-root .#{$name}-text {
        --app-text: rgb(var(--#{$name})) !important;
        color: rgb(var(--#{$name})) !important;

        .inverse & {
            --app-text: rgb(var(--inverse-#{$name})) !important;
        }
    }

    @at-root .btn,
    button,
    input[type=button] {
        &.#{$name} {
            &:hover {
                --app-bg: rgba(var(--#{$name}), 0.92) !important;
                --app-text: rgb(var(--on-#{$name})) !important;
                box-shadow: var(--elevation-1);
            }

            &:active,
            &:focus {
                --app-bg: rgba(var(--#{$name}), 0.88) !important;
                --app-text: rgb(var(--on-#{$name})) !important;
                box-shadow: var(--elevation-0);
            }
        }

        &.on-#{$name} {
            &:hover {
                --app-bg: rgba(var(--on-#{$name}), 0.92) !important;
                --app-text: rgb(var(--#{$name})) !important;
                box-shadow: var(--elevation-1);
            }

            &:active,
            &:focus {
                --app-bg: rgba(var(--on-#{$name}), 0.88) !important;
                --app-text: rgb(var(--#{$name})) !important;
                box-shadow: var(--elevation-0);
            }
        }

        &.#{$name}-container {
            &:hover {
                --app-bg: rgba(var(--#{$name}-container), 0.92) !important;
                --app-text: rgb(var(--on-#{$name}-container));
                box-shadow: var(--elevation-1);
            }

            &:active,
            &:focus {
                --app-bg: rgba(var(--#{$name}-container), 0.88) !important;
                --app-text: rgb(var(--on-#{$name}-container)) !important;
                box-shadow: var(--elevation-0);
            }
        }

        &.on-#{$name}-container {
            &:hover {
                --app-bg: rgba(var(--on-#{$name}-container), 0.92) !important;
                --app-text: rgb(var(--#{$name}-container)) !important;
                box-shadow: var(--elevation-1);
            }

            &:active,
            &:focus {
                --app-bg: rgba(var(--on-#{$name}-container), 0.88) !important;
                --app-text: rgb(var(--#{$name}-container)) !important;
                box-shadow: var(--elevation-0);
            }
        }
    }
}

@include gen-box-classes("primary");
@include gen-box-classes("error");
@include gen-box-classes("warning");
@include gen-box-classes("info");
@include gen-box-classes("success");

@mixin gen-surface-classes () {
    $classes: (surface-dim,
        surface,
        surface-bright,
        surface-container-lowest,
        surface-container-low,
        surface-container,
        surface-container-high,
        surface-container-highest,
    );

    @each $name in $classes {
        .#{$name} {
            --app-bg: rgb(var(--#{$name})) !important;
            --app-text: rgb(--on-suface) !important;
            @extend %box;
        }
    }
}

@include gen-surface-classes();

.mso {
    font-family: 'Material Symbols Outlined';
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    /* Preferred icon size */
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
}

.t2 {
    width: 100%;

    td {
        padding: 4px 0;
    }
}

.x {
    input[type='checkbox'] {
        display: none;
    }

    .wrap-collabsible {
        margin: 1.2rem 0;
    }

    .lbl-toggle {
        display: block;
        font-weight: bold;
        font-family: monospace;
        font-size: 1.2rem;
        text-transform: uppercase;
        text-align: center;
        padding: 1rem;
        cursor: pointer;
        border-radius: 7px;
        transition: all 0.25s ease-out;
        @extend .error;
        @extend %box;
    }

    .lbl-toggle::before {
        content: ' ';
        display: inline-block;
        border-top: 5px solid transparent;
        border-bottom: 5px solid transparent;
        border-left: 5px solid currentColor;
        vertical-align: middle;
        margin-right: .7rem;
        transform: translateY(-2px);
        transition: transform .2s ease-out;
    }

    .toggle:checked+.lbl-toggle::before {
        transform: rotate(90deg) translateX(-3px);
    }

    .collapsible-content {
        max-height: 0px;
        overflow: hidden;
        transition: max-height .25s ease-in-out;
    }

    .toggle:checked+.lbl-toggle+.collapsible-content {
        max-height: 350px;
    }

    .toggle:checked+.lbl-toggle {
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
    }

    .collapsible-content .content-inner {
        background: rgba(0, 105, 255, .2);
        border-bottom: 1px solid rgba(0, 105, 255, .45);
        border-bottom-left-radius: 7px;
        border-bottom-right-radius: 7px;
    }

    .collapsible-content p {
        margin-bottom: 0;
    }
}

.dashboard {
    width: 100%;
    margin: 0;
    padding: 0;
    gap: 1rem;
    display: flex;
    flex-direction: row;
    list-style: none;
    flex-wrap: wrap;
    li {
        @extend .box;
        @extend .primary;
        padding: 0;
        flex: calc(100% / 3);
        transition: background 300ms;
        &:hover {
            --app-bg: rgb(var(--primary-gradient)) !important;
        }

        a {
            padding: 1rem;
            display: inline-block;
            width: 100%;
            height: 100%;
            text-align: center;
            vertical-align: middle;
            color: var(--app-text) !important;
            text-decoration: none;
        }
    }
}